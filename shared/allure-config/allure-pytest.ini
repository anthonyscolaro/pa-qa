# Pytest Allure Configuration
# 
# Comprehensive Allure integration for pytest test framework
# Supports screenshots, attachments, parallel execution, and detailed reporting

[tool:pytest]
# Basic pytest configuration
minversion = 6.0
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --alluredir=allure-results
    --clean-alluredir
    --allure-link-pattern=issue:https://github.com/your-org/your-repo/issues/{}
    --allure-link-pattern=test_case:https://your-tms.com/testcase/{}
    --color=yes
    --durations=10
    --maxfail=10
    --showlocals
    -ra

# Test discovery patterns
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Markers for test categorization (used in Allure reports)
markers =
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    smoke: Smoke tests
    regression: Regression tests
    performance: Performance tests
    security: Security tests
    api: API tests
    ui: UI tests
    critical: Critical functionality tests
    major: Major functionality tests
    minor: Minor functionality tests
    trivial: Trivial tests
    slow: Slow running tests
    fast: Fast running tests
    flaky: Known flaky tests
    skip_ci: Skip in CI environment
    skip_local: Skip in local environment

# Required plugins
required_plugins =
    pytest-allure-adaptor>=1.7.10
    pytest-html>=3.0.0
    pytest-cov>=3.0.0
    pytest-xdist>=2.5.0
    pytest-mock>=3.6.0
    pytest-asyncio>=0.18.0

# Coverage configuration
coverage_options =
    --cov=src
    --cov-branch
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80

# Parallel execution
parallel_options =
    -n auto
    --dist loadfile

# Allure environment variables (can be overridden)
env =
    ALLURE_PROJECT_NAME = {env:ALLURE_PROJECT_NAME:unknown-project}
    ALLURE_RESULTS_DIR = {env:ALLURE_RESULTS_DIR:allure-results}
    PYTEST_CURRENT_TEST = {env:PYTEST_CURRENT_TEST:}

# Filter warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Timeout configuration
timeout = 300
timeout_method = thread

# Async test configuration
asyncio_mode = auto

# Custom pytest configuration for Allure reporting
[pytest_allure]
# Link patterns for external systems
link_patterns =
    issue = https://github.com/your-org/your-repo/issues/{}
    test_case = https://your-tms.com/testcase/{}
    requirement = https://your-requirements.com/req/{}

# Environment information
environment_info =
    Project = {env:ALLURE_PROJECT_NAME:unknown-project}
    Framework = pytest
    Python Version = {python_version}
    Platform = {platform}
    Test Run Date = {timestamp}

# Test categorization rules
severity_rules =
    critical = @pytest.mark.critical
    major = @pytest.mark.major
    minor = @pytest.mark.minor
    trivial = @pytest.mark.trivial

# Feature mapping
feature_mapping =
    unit = Unit Tests
    integration = Integration Tests
    e2e = End-to-End Tests
    api = API Tests
    ui = UI Tests
    performance = Performance Tests
    security = Security Tests

# Allure categories configuration
categories =
    Product defects:
        - failed
        - AssertionError
        - ValueError
    Test defects:
        - failed
        - TypeError
        - AttributeError
        - ImportError
    Infrastructure problems:
        - broken
        - ConnectionError
        - TimeoutError
        - OSError
    Flaky tests:
        - failed,passed
        - ".*flaky.*"
        - ".*intermittent.*"

# Additional pytest configuration for specific environments
[pytest_ci]
# CI-specific configuration
addopts = 
    --alluredir=allure-results
    --clean-alluredir
    --tb=line
    --maxfail=1
    --disable-warnings
    -n auto
    --dist loadfile
    --cov=src
    --cov-branch
    --cov-report=xml:coverage.xml
    --cov-fail-under=80

markers =
    not slow and not flaky

[pytest_local]
# Local development configuration
addopts = 
    --alluredir=allure-results
    --clean-alluredir
    --tb=short
    --maxfail=5
    --showlocals
    -v

# Console output configuration
console_output_style = progress