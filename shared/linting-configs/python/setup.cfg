# PA-QA Python Legacy Configuration
# setup.cfg for tools that don't yet support pyproject.toml
# This file provides backward compatibility for older tools

[metadata]
name = pa-qa-python-project
version = 1.0.0
description = PA-QA Python project with comprehensive code quality setup
long_description = file: README.md
long_description_content_type = text/markdown
author = PA-QA Team
author_email = qa@projectassistant.ai
license = MIT
license_files = LICENSE
url = https://github.com/project-assistant/pa-qa
project_urls =
    Bug Tracker = https://github.com/project-assistant/pa-qa/issues
    Documentation = https://pa-qa.readthedocs.io/
    Source Code = https://github.com/project-assistant/pa-qa
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Framework :: FastAPI
    Framework :: Django
    Topic :: Software Development :: Quality Assurance
    Topic :: Software Development :: Testing
    Typing :: Typed

[options]
python_requires = >=3.9
package_dir =
    = src
packages = find:
include_package_data = True
zip_safe = False

[options.packages.find]
where = src

[options.extras_require]
dev = 
    ruff>=0.1.5
    black>=23.9.1
    isort>=5.12.0
    mypy>=1.6.1
    pytest>=7.4.0
    pytest-cov>=4.1.0
    pytest-asyncio>=0.21.0
    pytest-mock>=3.11.0
    pre-commit>=3.5.0
    bandit>=1.7.5
    safety>=2.3.0
fastapi =
    fastapi>=0.100.0
    uvicorn[standard]>=0.23.0
    pydantic>=2.0.0
    httpx>=0.24.0
    pytest-httpx>=0.21.0
django =
    django>=4.2.0
    djangorestframework>=3.14.0
    django-extensions>=3.2.0
    factory-boy>=3.3.0

# Flake8 configuration (legacy support)
[flake8]
max-line-length = 88
max-complexity = 10
select = E,W,F,C,N,B,S,T,A,Q,T20,UP,N,ERA,PD,PL,RUF
ignore = 
    E203,  # Whitespace before ':' (conflicts with black)
    E501,  # Line too long (handled by black)
    W503,  # Line break before binary operator (conflicts with black)
    B008,  # Do not perform function calls in argument defaults (FastAPI deps)
    S101,  # Use of assert detected (OK in tests)
    S104,  # Possible binding to all interfaces
    S602,  # subprocess call with shell=True
    S603,  # subprocess call without shell=True
exclude = 
    .git,
    __pycache__,
    .tox,
    .eggs,
    *.egg,
    build,
    dist,
    .venv,
    venv,
    migrations,
    static,
    media,
per-file-ignores =
    tests/*:S101,PLR2004,ANN
    test_*.py:S101,PLR2004,ANN
    **/test_*.py:S101,PLR2004,ANN
    conftest.py:ANN
    **/api/**/*:B008
    **/routers/**/*:B008
    **/endpoints/**/*:B008
    **/models.py:A003
    **/admin.py:RUF012
    **/urls.py:RUF005
    **/views.py:PLR0913
    **/settings/**/*:S105,S106,S107
    **/config/**/*:S105,S106,S107

# isort configuration (legacy support)
[isort]
profile = black
multi_line_output = 3
line_length = 88
known_first_party = app,src,tests
known_third_party = fastapi,django,pydantic,sqlalchemy,requests,httpx
sections = FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
default_section = THIRDPARTY
force_grid_wrap = 0
combine_as_imports = true
include_trailing_comma = true
use_parentheses = true
ensure_newline_before_comments = true
force_sort_within_sections = true
skip_glob = 
    */migrations/*,
    */venv/*,
    */node_modules/*,
    .tox/*,
    build/*,
    dist/*

# pydocstyle configuration
[pydocstyle]
convention = google
add-ignore = D100,D104,D107,D203,D212,D213,D215,D404,D406,D407,D408,D409,D413
match-dir = (?!migrations).*
match = (?!test_).*\.py

# Coverage configuration (legacy)
[coverage:run]
source = src,app
omit = 
    */migrations/*
    */venv/*
    */virtualenvs/*  
    */tests/*
    */test_*
    manage.py
    setup.py
    conftest.py
    */__init__.py
    */settings/*
    */config/*
branch = True
parallel = True

[coverage:report]
precision = 2
show_missing = True
skip_covered = False
sort = Cover
exclude_lines =
    pragma: no cover
    def __repr__
    def __str__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov
title = PA-QA Test Coverage Report

[coverage:xml]
output = coverage.xml

[coverage:json]
output = coverage.json

# Bandit security linting
[bandit]
exclude_dirs = tests,test_*,*_test.py
skips = B101,B601

# PyLint configuration (legacy)
[pylint]
load-plugins = pylint_django,pylint_celery

[pylint.MASTER]
extension-pkg-whitelist = pydantic

[pylint.MESSAGES CONTROL]
disable = 
    C0111,  # missing-docstring
    R0903,  # too-few-public-methods  
    R0913,  # too-many-arguments
    R0914,  # too-many-locals
    R0915,  # too-many-statements
    W0613,  # unused-argument
    C0103,  # invalid-name
    R0801,  # duplicate-code

[pylint.FORMAT]
max-line-length = 88

[pylint.DESIGN]
max-args = 8
max-locals = 20
max-returns = 8
max-branches = 15
max-statements = 60
max-parents = 7
max-attributes = 12
min-public-methods = 1
max-public-methods = 25

# MyPy configuration (legacy)
[mypy]
python_version = 3.9
warn_return_any = True
warn_unused_configs = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_optional = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
show_error_codes = True
show_column_numbers = True
show_error_context = True

[mypy-tests.*]
disallow_untyped_defs = False

[mypy-conftest]
disallow_untyped_defs = False

# Distutils configuration
[egg_info]
tag_build = 
tag_date = 0

[bdist_wheel]
universal = 0

# Tool-specific configurations for legacy support
[tool:pytest]
testpaths = tests
python_files = test_*.py *_test.py tests.py
python_classes = Test* *Tests
python_functions = test_*
addopts = 
    --strict-markers
    --strict-config
    --cov=src
    --cov=app
    --cov-report=term-missing:skip-covered
    --cov-report=html
    --cov-report=xml
    --cov-fail-under=80
    --tb=short
    -ra
markers =
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    slow: Slow tests
    fastapi: FastAPI specific tests
    django: Django specific tests
    database: Tests requiring database
    external: Tests requiring external services
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
asyncio_mode = auto

[aliases]
test = pytest

# Development commands
[options.entry_points]
console_scripts =
    pa-qa-lint = pa_qa.scripts:lint
    pa-qa-test = pa_qa.scripts:test
    pa-qa-format = pa_qa.scripts:format