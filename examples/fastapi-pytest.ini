# pytest.ini - FastAPI testing configuration (2024-2025 best practices)

[tool:pytest]
# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test* *Tests
python_functions = test_*

# Test paths
testpaths = 
    tests
    tests/unit
    tests/integration
    tests/e2e

# Asyncio configuration for FastAPI async tests
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Markers for test categorization
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (database, external services)
    e2e: End-to-end tests (full application flow)
    slow: Slow running tests
    smoke: Smoke tests for CI/CD
    auth: Authentication related tests
    api: API endpoint tests
    websocket: WebSocket tests
    background: Background task tests
    database: Database tests
    external: Tests requiring external services
    flaky: Flaky tests that may need retries

# Coverage configuration
addopts = 
    --verbose
    --strict-markers
    --tb=short
    --cov=app
    --cov=src
    --cov-report=term-missing:skip-covered
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=json:coverage.json
    --cov-fail-under=70
    --cov-branch
    --maxfail=3
    --disable-warnings
    --color=yes
    -p no:warnings
    --import-mode=importlib

# Ignore patterns
norecursedirs = 
    .git
    .tox
    dist
    build
    *.egg
    venv
    env
    .venv
    .env
    node_modules
    __pycache__
    .pytest_cache
    htmlcov
    .coverage
    migrations

# Console output
console_output_style = progress

# Timeout configuration
timeout = 10
timeout_method = thread

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s - %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/test.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(name)s - %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Doctest configuration
doctest_optionflags = NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL

# Minimum Python version
minversion = 3.11

# Required plugins
required_plugins = 
    pytest-asyncio>=0.21.0
    pytest-cov>=4.0.0
    pytest-mock>=3.10.0
    pytest-timeout>=2.1.0
    pytest-xdist>=3.0.0
    httpx-mock>=0.2.0

# Parallel execution with pytest-xdist
# Uncomment for parallel execution
# addopts = -n auto

# Filter warnings
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ImportWarning
    ignore::ResourceWarning

# Environment variables for testing
[tool:pytest:env]
TESTING = true
DATABASE_URL = postgresql+asyncpg://test:test@localhost/test_db
REDIS_URL = redis://localhost:6379/1
SECRET_KEY = test-secret-key-only-for-testing
ENVIRONMENT = test
LOG_LEVEL = DEBUG